<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>vvalkyrja</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://vvalkyrja.com/"/>
  <updated>2018-03-25T14:10:35.631Z</updated>
  <id>http://vvalkyrja.com/</id>
  
  <author>
    <name>vvalkyrja</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac开发环境配置</title>
    <link href="http://vvalkyrja.com/2018/03/22/2018-03-22/"/>
    <id>http://vvalkyrja.com/2018/03/22/2018-03-22/</id>
    <published>2018-03-22T00:00:00.000Z</published>
    <updated>2018-03-25T14:10:35.631Z</updated>
    
    <content type="html"><![CDATA[<p>mac 开发环境配置记录<br><a id="more"></a></p><h3 id="安装homebrew"><a href="#安装homebrew" class="headerlink" title="安装homebrew"></a>安装homebrew</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h3 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your comments like email"</span></span><br></pre></td></tr></table></figure><h3 id="安装并设置Git"><a href="#安装并设置Git" class="headerlink" title="安装并设置Git"></a>安装并设置Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ brew install git</span><br><span class="line"></span><br><span class="line">// 如果git版本没有更新, 可以尝试重新link Git</span><br><span class="line">$ brew unlink git  </span><br><span class="line">$ brew link git</span><br><span class="line"></span><br><span class="line">// 设置git username和默认编辑器</span><br><span class="line">$ git config --global core.editor nano</span><br><span class="line">$ git config --global user.name <span class="string">"vvalkyrja"</span></span><br><span class="line">$ git config --global user.email <span class="string">"email@gmail.com"</span></span><br><span class="line"></span><br><span class="line">// 列出git的所有配置</span><br><span class="line">$ git config --list</span><br></pre></td></tr></table></figure><h3 id="安装nano编辑器并设置代码高亮"><a href="#安装nano编辑器并设置代码高亮" class="headerlink" title="安装nano编辑器并设置代码高亮"></a>安装nano编辑器并设置代码高亮</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ brew install nano  </span><br><span class="line"></span><br><span class="line">// 一键安装nano支持的代码高亮</span><br><span class="line">$ curl https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh | sh</span><br></pre></td></tr></table></figure><h3 id="安装编程常用字体"><a href="#安装编程常用字体" class="headerlink" title="安装编程常用字体"></a>安装编程常用字体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -L https://github.com/hbin/top-programming-fonts/raw/master/install.sh | bash</span><br></pre></td></tr></table></figure><h3 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h3><ul><li>iTerm2</li><li>PyCharm</li></ul><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><a href="https://github.com/hbin/top-programming-fonts" target="_blank" rel="noopener">top-programming-fonts</a></li><li><a href="https://brew.sh/" target="_blank" rel="noopener">homebrew</a></li><li><a href="https://github.com/scopatz/nanorc" target="_blank" rel="noopener">Improved Nano Syntax Highlighting Files</a></li><li><a href="https://git-scm.com/book/zh/v1/%E8%B5%B7%E6%AD%A5-%E5%88%9D%E6%AC%A1%E8%BF%90%E8%A1%8C-Git-%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">初次运行Git前的配置</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac 开发环境配置记录&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>从零开始的装机生活</title>
    <link href="http://vvalkyrja.com/2017/09/08/2017090801/"/>
    <id>http://vvalkyrja.com/2017/09/08/2017090801/</id>
    <published>2017-09-08T00:00:00.000Z</published>
    <updated>2018-03-25T14:10:35.631Z</updated>
    
    <content type="html"><![CDATA[<p>最近入手了多台主机, 配置过程大同小异, 整理一篇装机的todo list</p><a id="more"></a><h3 id="登陆主机"><a href="#登陆主机" class="headerlink" title="登陆主机"></a>登陆主机</h3><p>为了方便登陆, 在 <em>.ssh/</em> 下新建config文件, 添加主机的相关配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host <span class="keyword">do</span></span><br><span class="line">trueHostName your-host</span><br><span class="line">trueUser root</span><br><span class="line">        IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>使用 <em>ssh do</em> 飞快地登陆上了主机~</p><h3 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">useradd usernam  <span class="comment"># 新增用户</span></span><br><span class="line">passwd username  <span class="comment"># 修改密码</span></span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -b 4096  <span class="comment"># 生成ssh key</span></span><br><span class="line">usermod -aG wheel username  <span class="comment"># 将用户加入wheel组</span></span><br><span class="line"></span><br><span class="line">ssh-public-keys &gt;&gt; /home/username/.ssh/authorized_keys  <span class="comment"># 加入自己的public key到主机上</span></span><br><span class="line">chmod 600 /home/username/.ssh/authorized_keys  <span class="comment"># 修改authorized_keys的权限, 让username能够通过ssh登陆</span></span><br></pre></td></tr></table></figure><h3 id="安装bbr"><a href="#安装bbr" class="headerlink" title="安装bbr"></a>安装bbr</h3><h4 id="安装bbr-1"><a href="#安装bbr-1" class="headerlink" title="安装bbr"></a>安装bbr</h4><p>首先查看内核版本</p><blockquote><p>uname -r  </p></blockquote><p>发现do上开的centos7.3内核版本还是3.10, 还不支持bbr</p><blockquote><p>3.10.0-514.2.2.el7.x86_64  </p></blockquote><p>安装ELRepo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure></p><p>安装最新内核<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum --enablerepo=elrepo-kernel install kernel-ml -y</span><br></pre></td></tr></table></figure></p><p>查看rpm安装的kernal包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep kernel</span><br></pre></td></tr></table></figure></p><p>发现kernel-ml-4.9.0-1.el7.elrepo.x86_64在列表中, 安装完成了</p><blockquote><p>kernel-tools-libs-3.10.0-514.21.1.el7.x86_64<br>kernel-tools-3.10.0-514.21.1.el7.x86_64<br>kernel-headers-3.10.0-514.21.1.el7.x86_64<br>kernel-ml-4.13.0-1.el7.elrepo.x86_64<br>kernel-3.10.0-514.21.1.el7.x86_64<br>kernel-devel-3.10.0-514.21.1.el7.x86_64</p></blockquote><p>通过设置grub2开启新版本内核, 查看grub2 boot entry<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \<span class="string">'</span></span><br></pre></td></tr></table></figure></p><p>在列表中应有  </p><blockquote><p>CentOS Linux 7 Rescue 62ad4c1459554a5d9875da7d9370200d (4.13.0-1.el7.elrepo.x86_64)<br>CentOS Linux (4.13.0-1.el7.elrepo.x86_64) 7 (Core)  # 这个是我们需要启用的, 序号1<br>CentOS Linux (3.10.0-514.21.1.el7.x86_64) 7 (Core)<br>CentOS Linux (0-rescue-de820036e9b44905be9e94bc0f95cdc7) 7 (Core)</p></blockquote><p>设置grub2 default boot entry<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub2-set-default 1  <span class="comment"># 从0开始的第二个</span></span><br></pre></td></tr></table></figure></p><p>重启系统<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo shutdown -r now</span><br></pre></td></tr></table></figure></p><p>查看内核版本, 已经更新为4.13.0了</p><blockquote><p>uname -r </p></blockquote><h4 id="启用bbr"><a href="#启用bbr" class="headerlink" title="启用bbr"></a>启用bbr</h4><p>修改sysctl配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'net.core.default_qdisc=fq'</span> | sudo tee -a /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'net.ipv4.tcp_congestion_control=bbr'</span> | sudo tee -a /etc/sysctl.conf</span><br><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure></p><p>确认bbr已经启用, output应该和-&gt;后一致<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl net.ipv4.tcp_available_congestion_control </span><br><span class="line">-&gt; net.ipv4.tcp_available_congestion_control = bbr cubic reno  </span><br><span class="line"></span><br><span class="line">sudo sysctl -n net.ipv4.tcp_congestion_control </span><br><span class="line">-&gt; bbr  </span><br><span class="line"></span><br><span class="line">lsmod | grep bbr </span><br><span class="line">-&gt; tcp_bbr                16384  0</span><br></pre></td></tr></table></figure></p><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><p>centos7开始使用firewall-cmd, 为了主机的安全可以配置开放的端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state  <span class="comment"># 查看firewalld状态</span></span><br><span class="line"></span><br><span class="line">service start firewalld  <span class="comment"># 开启firewalld</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --list-all  <span class="comment"># 查看所有配置</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --add-port=1080/tcp --permanent  <span class="comment"># 增加开放端口</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --zone=public --remove-port=1080/tcp --permanent  <span class="comment"># 移除开放端口</span></span><br><span class="line"></span><br><span class="line">firewall-cmd --reload </span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld  <span class="comment"># 创建好规则后即可将firewalld作为system service启用</span></span><br></pre></td></tr></table></figure><p>完整的基础配置选项可以查看<a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7" target="_blank" rel="noopener">do的教程</a></p><h3 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update &amp;&amp; sudo yum -y install zsh  <span class="comment"># 安装zsh </span></span><br><span class="line"></span><br><span class="line">sudo yum install git</span><br><span class="line"></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span>  <span class="comment"># 安装oh-my-zsh</span></span><br><span class="line"></span><br><span class="line">nano ~/.zshrc  <span class="comment"># 修改配置</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.szhrc  <span class="comment"># 重载配置</span></span><br></pre></td></tr></table></figure><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><p><a href="https://www.vultr.com/docs/how-to-deploy-google-bbr-on-centos-7" target="_blank" rel="noopener">How to Deploy Google BBR on CentOS 7</a></p></li><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-sudo-user-on-centos-quickstart" target="_blank" rel="noopener">How To Create a Sudo User on CentOS</a></p></li><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7" target="_blank" rel="noopener">How To Set Up a Firewall Using FirewallD on CentOS 7</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近入手了多台主机, 配置过程大同小异, 整理一篇装机的todo list&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用TravisCI自动部署到github pages</title>
    <link href="http://vvalkyrja.com/2017/08/20/2017082001/"/>
    <id>http://vvalkyrja.com/2017/08/20/2017082001/</id>
    <published>2017-08-20T00:00:00.000Z</published>
    <updated>2018-03-25T14:10:35.631Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo每次上传都需要generate &amp; deploy, 相当不方便, 使用travis的持续集成可以省去繁琐的步骤快速上传, 提升写博客的体验~</p><a id="more"></a><h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><p>为了和gitlab的key区分开, 我重新生成了一对ssh-key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成自己的ssh-key</span></span><br><span class="line">ssh-keygen -t rsa -C username@mail.com -b 4096</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有多个ssh-key存在, 添加ssh-key</span></span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看添加的ssh-key是否存在</span></span><br><span class="line">ssh-add -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试连接</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加个人信息</span></span><br><span class="line">git config user.name vvalkyrja</span><br><span class="line">git config user.email mail@mail.com</span><br></pre></td></tr></table></figure><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>参考<a href="https://hexo.io" target="_blank" rel="noopener">hexo官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>主题使用vue风格的<a href="https://github.com/pinggod/hexo-theme-apollo" target="_blank" rel="noopener">apollo</a></p><p>下载好apollo的主题文件后, 需要把.git删掉, 作为repo的一部分上传到git, 方便管理</p><p>需要注意的是, github pages只对master分支有效, 因此配置信息需要push到source分支</p><p>每次让travis从source分支拉取配置和源代码, 生成好之后上传到master即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除.git</span></span><br><span class="line">rm -rf ./themes/apollo/.git/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建并切换分支, 添加到git</span></span><br><span class="line">git checkout -b <span class="built_in">source</span> </span><br><span class="line">git add .</span><br></pre></td></tr></table></figure><div class="tip"><br>    添加文件到git时可能会提示: <strong>fatal: Pathspec ‘.’ is in submodule</strong>, 这是由于git的文件夹缓存还在, 需要手动删除<br>    $ git rm –cached directory<br></div><p>因为把部署的步骤放到了travis来做, 因此许多文件是不需要上传到git的, travis会根据指令来安装和初始化, 多余的文件gitignore掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">*.log</span><br><span class="line">db.json</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure><h3 id="Travis"><a href="#Travis" class="headerlink" title="Travis"></a>Travis</h3><p>使用Github账户登陆Travis CI, 在github上生成拥有public repo权限的 <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">Personal access tokens</a></p><p>Travis中勾选自己从github上同步过来的repo, 进行设置</p><p>环境变量加入刚才获得的token: <strong>{GH_TOKEN: your_token}</strong></p><p>在repo中创建 <strong>.travis.yml</strong> , 配置持续集成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"></span><br><span class="line"><span class="attr">node_js:</span> <span class="string">stable</span></span><br><span class="line"></span><br><span class="line"><span class="attr">install:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">hexo</span> <span class="string">cl</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">hexo</span> <span class="string">g</span></span><br><span class="line"></span><br><span class="line"><span class="attr">after_script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">cd</span> <span class="string">./public</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">init</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.name</span> <span class="string">"travis"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">config</span> <span class="string">user.email</span> <span class="string">""</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">add</span> <span class="string">.</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">commit</span> <span class="bullet">-m</span> <span class="string">"travis update"</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">git</span> <span class="string">push</span> <span class="bullet">--force</span> <span class="bullet">--quiet</span> <span class="string">"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;"</span> <span class="attr">master:master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">source</span></span><br><span class="line"><span class="attr">env:</span></span><br><span class="line"><span class="attr"> global:</span></span><br><span class="line"><span class="attr">   - GH_REF:</span> <span class="string">github.com/username/repo.git</span></span><br></pre></td></tr></table></figure><p>最后再push一次到source分支, travis CI就会开始持续集成的工作, 将hexo generate好的文档push到master分支, 由github pages托管</p><h3 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h3><p>如果要使用自定义的域名, 只需要在repo settings里加上即可, 同时github会在master里生成CNAME文件来做标示<br>但travis使用的是force push, 因此需要在源文件中把CNAME加上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> vvalkyrja.com &gt;&gt; ./<span class="built_in">source</span>/CNAME</span><br></pre></td></tr></table></figure><h3 id="添加About页面"><a href="#添加About页面" class="headerlink" title="添加About页面"></a>添加About页面</h3><p>apollo主题默认不带about me页面, 我们可以利用hexo来添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">'about'</span></span><br></pre></td></tr></table></figure><p><strong>./source</strong> 下会生成/about 并带有index.md, 将其作为about页面即可, 当然还是要在_config里设置的~</p><h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3><p>使用TravisCI之后, 再也不用手动hexo g &amp;&amp; hexo d了</p><p>只需要在 <strong>./source/_posts</strong> 下写好md, 直接push即可完成自动部署</p><p>如果使用的是gitlab作为代码仓库, 也可以用gitlab-ci来完成部署</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><a href="http://www.jianshu.com/p/5e74046e7a0f" target="_blank" rel="noopener">使用 Travis CI 自动部署 Hexo</a></li><li><a href="http://www.selfrebuild.net/2016/11/16/github-hexo-blog-auto-deploy/" target="_blank" rel="noopener">使用Travis CI自动部署你的Hexo博客到Github</a></li><li><a href="http://www.jianshu.com/p/e22c13d85659" target="_blank" rel="noopener">手把手教你使用Travis CI自动部署你的Hexo博客到Github上</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo每次上传都需要generate &amp;amp; deploy, 相当不方便, 使用travis的持续集成可以省去繁琐的步骤快速上传, 提升写博客的体验~&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://vvalkyrja.com/2017/08/19/hello-world/"/>
    <id>http://vvalkyrja.com/2017/08/19/hello-world/</id>
    <published>2017-08-19T00:00:00.000Z</published>
    <updated>2018-03-25T14:10:35.631Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
